# this is the build file for project WurstLink
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(WurstLink VERSION 1.0.0 LANGUAGES C CXX)

# target
add_custom_target(TestHost)

# target
add_custom_target(Host)

# target
add_executable(client "")
set_target_properties(client PROPERTIES OUTPUT_NAME "client")
set_target_properties(client PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/wasm/x86_64/release")
target_include_directories(client PRIVATE
    Client/src
    Client/src/include
)
target_compile_options(client PRIVATE
    $<$<COMPILE_LANGUAGE:C>:>
    $<$<COMPILE_LANGUAGE:CXX>:>
    $<$<COMPILE_LANGUAGE:C>:-Wall>
    $<$<COMPILE_LANGUAGE:CXX>:-Wall>
    $<$<COMPILE_LANGUAGE:C>:-Wextra>
    $<$<COMPILE_LANGUAGE:CXX>:-Wextra>
    $<$<COMPILE_LANGUAGE:C>:-Werror>
    $<$<COMPILE_LANGUAGE:CXX>:-Werror>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(client PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(client PRIVATE -O3)
endif()
if(MSVC)
    set_property(TARGET client PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_options(client PRIVATE
    
    --use-preload-plugins
)
target_sources(client PRIVATE
    Client/src/networking/network_main.c
    Client/src/game/components/transform.c
    Client/src/game/game_main.c
    Client/src/main.c
    Client/src/rendering/render_main.c
    Client/src/include/string.cpp
    Client/src/include/utilities.h
    Client/src/include/wurstlink_types.h
    Client/src/include/list.h
    Client/src/include/common.h
    Client/src/include/logger.h
        Client/src/include/vector.h
    Client/src/game/components/transform.h
    Client/src/include/logger.hpp
        Client/src/include/vector.hpp
    Client/src/include/list.hpp
    Client/src/include/string.hpp
    Client/src/include/utilities.hpp
)

# target
add_custom_target(WurstLink)

# target
add_custom_target(PrototypeClient)

